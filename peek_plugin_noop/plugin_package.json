// This file is parsed with the jsoncfg python package
// It supports comments like this one.

// Directories are the location of plugin_package.json
{
  // Some details about this Peek App
  "plugin": {
    "title": "Testing Noop",
    "packageName": "peek_plugin_noop",
    // The name of the root python package
    "version":"0.7.9",
    "buildNumber": "#PLUGIN_BUILD#",
    "buildDate": "#BUILD_DATE#",
    "creator": "Synerty Pty Ltd",
    "website": "www.synerty.com"
  },
  // The Peek Platform services that this plugin needs to run
  "requiresServices": [
    "server",
    "worker",
    "agent",
    "client",
    "storage",
    "mobile",
    "desktop",
    "admin"
  ],
  // Settings specific to the peek_client service
  // This could be "mobile-ns", "mobile-web" or "mobile"
  "mobile": {
    // Config Menu Button (Optional)
    // Add a config button on the footer, this is the path it will route to
    // DON'T include this plugins route prefix, eg /peek_plugin_noop
    "configLinkPath": "/config", // Actual path will be /peek_plugin_noop/config
    // Show Plugin Home Link
    // Show the plugin as an app on the home screen
    "showHomeLink": true,
    // Show Plugin In Title Bar
    // Show the plugin as an app on the home screen
    "showInTitleBar": false,
    // True for left, false, for right
    "titleBarLeft": false,
    // The text on the button
    "titleBarText": "Noop",
    // The directory is where the angular2 route is for the client site
    // This will be lazy loaded
    // EG "_private/mobile-app"
    "appDir": "_private/mobile-app",
    // The directory is where the angular2 module is for the client site
    // This will be linked in under node_modules/@peek/<plugin_name>
    // EG "_private/mobile-module"
    "moduleDir": "plugin-module",
    // The directory is where static assests live
    // This will be linked to app/assets/<plugin_name>
    // EG "_private/mobile-assets"
    "assetDir": "_private/mobile-assets",
    // (Optional)
    // The main module for the angular2 route
    // This must be in the "appDir"
    // EG "plugin-noop.module"
    // NOTE, This class must be the default export, "export default class ..."
    "appModule": "noop.module#NoopModule",
    // (Optional)
    // The root module for this peek plugin, relative to moduleDir
    // This module will be loaded once with the main angular app, outside of the
    // lazy loaded plugin main module.
    // Use this if you need to always have some code active, angular2 garbage collects
    // appModule when its' not needed.
    // EG "plugin-noop-root.service"
    // on startup and keeps it loaded
    "rootModules": [
      {
        "file": "_private/mobile/plugin-noop-root.module",
        "class": "PluginNoopClientRootModule"
      }
    ],
    // (Optional) (Depreicated, use rootServices instead)
    // The root service for this peek plugin, relative to moduleDir
    // This service will be loaded once with the main angular app, outside of the
    // lazy loaded plugin main module.
    //
    // Use this if you need to always have some code active, angular2 garbage collects
    // services provided by appModule when they're not needed.
    // NOTE: You problably also want to have a "rootModules" which needs this
    // service injected into it.
    //
    // persistent (boolean): If this is true, then the peek mobile app loads this service
    //
    // If you want the service provided with a different class, set the useClassFile
    // and useClassClass parameters.
    // useClassFile (string): The file that the class to use exists in.
    // useClassClass (string): The class of the class to import and put into "useClass"
    //

    // EG "plugin-noop-root.service"
    "rootServices": [
      {
        "file": "_private/mobile/plugin-noop-root.service",
        "class": "PluginNoopClientRootService",
        "useClassFile": "_private/mobile/plugin-noop-root.service",
        "useClassClass": "PluginNoopClientRootService",
        "persistent":false
      }
    ],
    // (Optional)
    // The path for the plugin icon
    // This must be relative to  "appDir"
    // EG "plugin_icon.png"
    "icon": "/assets/peek_plugin_noop/plugin_icon.png"
  },
  // Settings specific to the peek_client service
  // This could be "desktop-electron", "desktop-web" or "desktop"
  "desktop": {
    // Config Menu Button (Optional)
    // Add a config button on the footer, this is the path it will route to
    // DON'T include this plugins route prefix, eg /peek_plugin_noop
    "configLinkPath": "/config", // Actual path will be /peek_plugin_noop/config
    // Show Plugin Home Link
    // Show the plugin as an app on the home screen
    "showHomeLink": true,
    // Show Plugin In Title Bar
    // Show the plugin as an app on the home screen
    "showInTitleBar": false,
    // True for left, false, for right
    "titleBarLeft": false,
    // The text on the button
    "titleBarText": "Noop",
    // The directory is where the angular2 route is for the client site
    // This will be lazy loaded
    // EG "_private/mobile-app"
    "appDir": "_private/mobile-app",
    // The directory is where the angular2 module is for the client site
    // This will be linked in under node_modules/@peek/<plugin_name>
    // EG "_private/mobile-module"
    "moduleDir": "plugin-module",
    // The directory is where static assests live
    // This will be linked to app/assets/<plugin_name>
    // EG "_private/mobile-assets"
    "assetDir": "_private/mobile-assets",
    // (Optional)
    // The main module for the angular2 route
    // This must be in the "appDir"
    // EG "plugin-noop.module"
    // NOTE, This class must be the default export, "export default class ..."
    "appModule": "noop.module#NoopModule",
    // (Optional)
    // The root module for this peek plugin, relative to moduleDir
    // This module will be loaded once with the main angular app, outside of the
    // lazy loaded plugin main module.
    // Use this if you need to always have some code active, angular2 garbage collects
    // appModule when its' not needed.
    // EG "plugin-noop-root.service"
    // persistent (boolean): If this is true, then the peek mobile app loads this service
    // on startup and keeps it loaded
    "rootModules": [
      {
        "file": "_private/mobile/plugin-noop-root.module",
        "class": "PluginNoopClientRootModule",
        "persistent":false
      }
    ],
    // (Optional) (Depreicated, use rootServices instead)
    // The root service for this peek plugin, relative to moduleDir
    // This service will be loaded once with the main angular app, outside of the
    // lazy loaded plugin main module.
    // Use this if you need to always have some code active, angular2 garbage collects
    // services provided by appModule when they're not needed.
    // NOTE: You problably also want to have a "rootModules" which needs this
    // service injected into it.
    // EG "plugin-noop-root.service"
    "rootServices": [
      {
        "file": "_private/mobile/plugin-noop-root.service",
        "class": "PluginNoopClientRootService"
      }
    ],
    // (Optional)
    // The path for the plugin icon
    // This must be relative to  "appDir"
    // EG "plugin_icon.png"
    "icon": "/assets/peek_plugin_noop/plugin_icon.png"
  },
  // Settings specific to the peek_server service
  "admin": {
    // Show Plugin Home Link
    // Show the plugin in the list of plugins on the admin screen
    "showHomeLink": true,
    // The directory where the angular2 route is for server admin site
    // EG "frontend/client"
    "appDir": "_private/admin-app",
    // The main module for the angular2 route
    // This must be in the "appDir"
    // EG "plugin-noop.module"
    "appModule": "noop.module#NoopModule"
  },
  // Settings specific to the peek_client service
  "client": {
  },
  // Settings specific to the peek_server service
  "server": {
  },
  // Settings specific to the database service
  // The database is migrated by the peek_server and used from both the server and worker
  // services
  "storage": {
    // The alembic directory where the database schema migration scripts are stored
    "alembicDir": "_private/alembic"
  },
  // Settings specific to the peek_worker service
  "worker": {
  },
  // Settings specific to the peek_agent service
  "agent": {
  }
}